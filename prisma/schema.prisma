// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL") // uses connection pooling
}

model User {
  id        String   @id @unique @default(uuid())
  pseudo    String   @unique
  email     String   @unique
  password  String
  firstName String
  lastName  String
  birthDate DateTime?
  phoneNumber String?
  isAdmin   Boolean  @default(false)
  avatarImg String?
  scores    Score[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map(name: "Users")
}

model Score {
  id           String   @id @unique @default(uuid())
  value        Int
  userId       String   // utilisateur qui a réalisé le score
  user         User     @relation(fields: [userId], references: [id])
  gameId       String   // type de jeu
  game         Game     @relation(fields: [gameId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Game {
  id         String   @id @unique @default(uuid())
  name       String   @unique
  options    Json     // options paramétrables selon le jeu
  rules      String[] // chaque jeu a ses propres règles
  scores     Score[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
